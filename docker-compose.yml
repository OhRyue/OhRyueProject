services:
  mysql:
    image: mysql:8.4
    container_name: certpilot-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpw}
      MYSQL_DATABASE: certpilot
      MYSQL_USER: app
      MYSQL_PASSWORD: apppw
    ports: ["3307:3306"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-prootpw"]
      interval: 10s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    container_name: certpilot-adminer
    ports: ["8084:8080"]

  discovery:
    build:
      context: .                                   # ✅ 루트 컨텍스트
      dockerfile: infra/discovery/Dockerfile       # ✅ 모듈 Dockerfile 경로
    image: OhRyue/discovery:dev
    container_name: discovery
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports: ["8761:8761"]
    restart: unless-stopped

  gateway:
    build:
      context: .                                   # ✅ 루트 컨텍스트
      dockerfile: infra/gateway/Dockerfile         # ✅ 모듈 Dockerfile 경로
    image: OhRyue/gateway:dev
    container_name: gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on: [discovery]
    ports: ["8080:8080"]
    restart: unless-stopped

  account-service:
    build:
      context: ./services/account-service
    image: OhRyue/account-service:dev
    container_name: account-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on: [ mysql, discovery ]
    restart: unless-stopped

  study-service:
    build:
      context: .
      dockerfile: services/study-service/Dockerfile
    image: OhRyue/study-service:dev
    container_name: study-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql:
        condition: service_healthy
      discovery:
        condition: service_started
    ports: [ "8082:8082" ]
    restart: unless-stopped

  report-service:
    build:
      context: ./services/report-service
    image: OhRyue/report-service:dev
    container_name: report-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on: [ discovery ]
    restart: unless-stopped

  gamify-service:
    build:
      context: ./services/gamify-service
    image: OhRyue/gamify-service:dev
    container_name: gamify-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on: [ discovery ]
    restart: unless-stopped

  cert-service:
    build:
      context: ./services/cert-service
    image: OhRyue/cert-service:dev
    container_name: cert-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on: [ discovery ]
    restart: unless-stopped

  versus-service:
    build:
      context: ./services/versus-service
    image: OhRyue/versus-service:dev
    container_name: versus-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on: [ discovery ]
    restart: unless-stopped
